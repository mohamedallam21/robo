<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="robot">
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>100</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_wheel_joint</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_wheel_joint</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.3083</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.07</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>17.14</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>0.741244</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
 
  
<!-- LIDAR Sensor -->
    <gazebo reference="lidar_link">
    <!-- Define a sensor of type "ray" (commonly used for LiDAR sensors) -->
    <sensor type="ray" name="lidar_sensor">
        <!-- Set the pose of the sensor relative to the link it's attached to (x, y, z, roll, pitch, yaw) -->
        <pose>0 0 0 0 0 0</pose>

        <!-- Enable or disable visualization of the sensor in Gazebo -->
        <visualize>true</visualize>

        <!-- Set the update rate for the sensor in Hz (how often it produces data) -->
        <update_rate>40</update_rate>

        <!-- Define the ray properties of the sensor (LiDAR emits rays to measure distances) -->
        <ray>
            <scan>
                <horizontal>
                    <!-- Number of samples (rays) per scan -->
                    <samples>720</samples>

                    <!-- Resolution of the scan (typically 1 means 1 ray per angle unit) -->
                    <resolution>1</resolution>

                    <!-- Minimum angle of the scan (in radians, -π/2 for a 180-degree scan) -->
                    <min_angle>-1.570796</min_angle>

                    <!-- Maximum angle of the scan (in radians, π/2 for a 180-degree scan) -->
                    <max_angle>1.570796</max_angle>
                </horizontal>
            </scan>

            <range>
                <!-- Minimum range (distance) the sensor can detect -->
                <min>0.10</min>

                <!-- Maximum range (distance) the sensor can detect -->
                <max>30.0</max>

                <!-- Resolution of the distance measurements (smallest measurable distance change) -->
                <resolution>0.01</resolution>
            </range>

            <!-- Define noise characteristics for the sensor -->
            <noise>
                <!-- Type of noise (Gaussian noise is commonly used for sensors) -->
                <type>gaussian</type>

                <!-- Mean value of the noise (0.0 means no bias) -->
                <mean>0.0</mean>

                <!-- Standard deviation of the noise (how much variation there is) -->
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <!-- Attach a Gazebo plugin to simulate the LiDAR sensor in ROS -->
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <!-- Define the ROS topic name where the LiDAR data will be published -->
            <topicName>/scan</topicName>

            <!-- Specify the frame name associated with the LiDAR link (used for transformations) -->
            <frameName>lidar_link</frameName>
        </plugin>
    </sensor>
</gazebo>
 <gazebo reference="ultrasonic_link">
    <!-- Define a sensor of type "ray" with the name "sonar" -->
    <sensor type="ray" name="sonar">

        <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
        <pose>0 0 0 0 0 0</pose>

        <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
        <visualize>true</visualize>

        <!-- Set the update rate for the sensor in Hz (how often it updates) -->
        <update_rate>5</update_rate>

        <!-- Define the ray properties of the sensor -->
        <ray>
            <!-- Define the scan parameters for the sensor -->
            <scan>
                <horizontal>
                    <!-- Number of horizontal samples (rays) per scan -->
                    <samples>5</samples>

                    <!-- Resolution of the scan (how fine the angular increments are) -->
                    <resolution>1.0</resolution>

                    <!-- Minimum angle for the horizontal scan in radians -->
                    <min_angle>-0.18</min_angle>

                    <!-- Maximum angle for the horizontal scan in radians -->
                    <max_angle>0.18</max_angle>
                </horizontal>

                <vertical>
                    <!-- Number of vertical samples (rays) per scan -->
                    <samples>5</samples>

                    <!-- Resolution of the vertical scan -->
                    <resolution>1</resolution>

                    <!-- Minimum angle for the vertical scan in radians -->
                    <min_angle>-0.035</min_angle>

                    <!-- Maximum angle for the vertical scan in radians -->
                    <max_angle>0.035</max_angle>
                </vertical>
            </scan>

            <!-- Define the range properties of the sensor -->
            <range>
                <!-- Minimum distance the sensor can measure -->
                <min>0.01</min>

                <!-- Maximum distance the sensor can measure -->
                <max>4</max>

                <!-- Resolution of the distance measurements -->
                <resolution>0.01</resolution>
            </range>
        </ray>

        <!-- Attach a Gazebo plugin for interfacing with ROS -->
        <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
            <!-- Gaussian noise added to the sensor readings -->
            <gaussianNoise>0.005</gaussianNoise>

            <!-- Always keep the sensor active -->
            <alwaysOn>true</alwaysOn>

            <!-- Update rate for the sensor in Hz -->
            <updateRate>5</updateRate>

            <!-- ROS topic name where the sensor data will be published -->
            <topicName>/genius/sonar</topicName>

            <!-- Frame name for the sensor, used for transformations -->
            <frameName>ultrasonic_link</frameName>

            <!-- Field of view of the sensor in radians -->
            <fov>0.5</fov>

            <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
            <radiation>ultrasound</radiation>
        </plugin>
    </sensor>
</gazebo>
<gazebo reference="ultrasonic_link">
    <!-- Define a sensor of type "ray" with the name "sonar" -->
    <sensor type="ray" name="sonar">

        <!-- Set the position and orientation of the sensor relative to the reference link (x, y, z, roll, pitch, yaw) -->
        <pose>0 0 0 0 0 0</pose>

        <!-- Enable or disable visualization of the sensor in the Gazebo simulation -->
        <visualize>true</visualize>

        <!-- Set the update rate for the sensor in Hz (how often it updates) -->
        <update_rate>5</update_rate>

        <!-- Define the ray properties of the sensor -->
        <ray>
            <!-- Define the scan parameters for the sensor -->
            <scan>
                <horizontal>
                    <!-- Number of horizontal samples (rays) per scan -->
                    <samples>5</samples>

                    <!-- Resolution of the scan (how fine the angular increments are) -->
                    <resolution>1.0</resolution>

                    <!-- Minimum angle for the horizontal scan in radians -->
                    <min_angle>-0.18</min_angle>

                    <!-- Maximum angle for the horizontal scan in radians -->
                    <max_angle>0.18</max_angle>
                </horizontal>

                <vertical>
                    <!-- Number of vertical samples (rays) per scan -->
                    <samples>5</samples>

                    <!-- Resolution of the vertical scan -->
                    <resolution>1</resolution>

                    <!-- Minimum angle for the vertical scan in radians -->
                    <min_angle>-0.035</min_angle>

                    <!-- Maximum angle for the vertical scan in radians -->
                    <max_angle>0.035</max_angle>
                </vertical>
            </scan>

            <!-- Define the range properties of the sensor -->
            <range>
                <!-- Minimum distance the sensor can measure -->
                <min>0.01</min>

                <!-- Maximum distance the sensor can measure -->
                <max>4</max>

                <!-- Resolution of the distance measurements -->
                <resolution>0.01</resolution>
            </range>
        </ray>

        <!-- Attach a Gazebo plugin for interfacing with ROS -->
        <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
            <!-- Gaussian noise added to the sensor readings -->
            <gaussianNoise>0.005</gaussianNoise>

            <!-- Always keep the sensor active -->
            <alwaysOn>true</alwaysOn>

            <!-- Update rate for the sensor in Hz -->
            <updateRate>5</updateRate>

            <!-- ROS topic name where the sensor data will be published -->
            <topicName>/genius/sonar</topicName>

            <!-- Frame name for the sensor, used for transformations -->
            <frameName>ultrasonic_link</frameName>

            <!-- Field of view of the sensor in radians -->
            <fov>0.5</fov>

            <!-- Type of radiation emitted by the sensor (here, 'ultrasound' for an ultrasonic sensor) -->
            <radiation>ultrasound</radiation>
        </plugin>
    </sensor>
</gazebo>



</robot>